"use strict";function e(){return process.domain&&process.domain.__sk_local.__sk_skip}let t;const n=require("./get-native-file-name");let r="../native/"+n;try{console.log("Loading Seeker native module: "+r),t=require(r)}catch(e){throw console.error("Seeker failed to load native module "+r),e}let i=new WeakMap,o=new Map;t.registerGcCallback(e=>{if(e.length===o.size)return;const t=new Map;for(let n=0;n<e.length;++n)t.set(e[n],o.get(e[n]));o=t});const a={taint:function(n,r){if(!e())if("string"==typeof n){if(n.length<=1)return;const e=t.taint(n);o.set(e,r)}else{if("object"!=typeof n)throw new Error("Tainted map accepts only keys of type object or string");i.set(n,r)}},isTainted:function(n){if(!e())return"string"==typeof n?!(n.length<=1)&&t.isTainted(n):"object"==typeof n?i.has(n):void 0},getTaintedInfo:function(n){if(!e()){if("string"==typeof n){if(n.length<=1)return;const e=t.getTaintedInfo(n);return o.get(e)}return"object"==typeof n?i.get(n):void 0}},clearMap:function(){t.clearMap(),o.clear(),i=new WeakMap},getTaintedValues:function(){return o},getSize:function(){return t.getSize()},printKeys:function(){return t.printKeys()},areSame:function(e,n){return t.areSame(e,n)},cloneString:function(e){return t.cloneString(e)}};module.exports=a;