"use strict";function e(e,t){this.findingCache={},this.urlAggregationType=e.urlAggregationType,this.includeSourceType=e.aggregateBySourceType,this.includeSourceName=e.aggregateBySourceName,this.includeCodeLocation=e.aggregateByCodeLocation,this.submitIntervalMs=1e3*e.submitIntervalSec,this.contextFields=t}function t(e,t){return!!Object.keys(e).map(t=>e[t]).find(e=>e.checkerKey===t.checkerKey&&t.flowStates&&t.flowStates[0]&&e.flowStates&&e.flowStates[0]&&i(t.flowStates[0].stacktrace).includes(i(e.flowStates[0].stacktrace)))}function i(e){return e.split("\n").filter(e=>!e.includes("__sk_wrapWithBeforeAfterCallbacks")).join("\n")}const n=require("../../util/misc"),a=require("./../../entities/enums/url-aggregation-type"),s=require("../../entities/enums/replay-header"),c=5e3;let o=5e3;e.prototype.buildCustomFindingHashCode=function(e){let t=n.hashCode(e.checkerKey);this.includeSourceName&&(t=31*t+(e.vulnerableSourceName?n.hashCode(e.vulnerableSourceName):0)),this.includeSourceType&&(t=31*t+(e.vulnerableSourceType?n.hashCode(e.vulnerableSourceType):0));const i=e.extractVulnerableHttpRequestData();if(this.urlAggregationType&&i)switch(this.urlAggregationType){case a.REQUEST:t=31*t+(i.path?n.hashCode(i.path):0);break;case a.CONTEXT_PATH:t=31*t+(i.contextPath?n.hashCode(i.contextPath):0)}if(this.includeCodeLocation){const i=e.extractCodeSignature();t=31*t+(i?n.hashCode(i):0)}return this.contextFields&&e.checkerContext&&this.contextFields.forEach(i=>{let a=e.checkerContext[i];t=31*t+(a?n.hashCode(a):0)}),t},e.prototype.setFindingSubmissionInterval=function(e){o=e>5e3?e:5e3},e.prototype.toSubmit=function(e){this.findingCache||(this.findingCache={});const i=e.extractVulnerableHttpRequestData();if(i&&i.getFirstHeader(s.REPLAY_FOR_CHECKER)===e.checkerKey)return!0;const n=this.buildCustomFindingHashCode(e);if(!this.findingCache[n])return!t(this.findingCache,e)&&(this.findingCache[n]=e,!0);const a=Math.max(o,this.submitIntervalMs);return e.tstamp-this.findingCache[n].tstamp>a&&(this.findingCache[n]=e,!0)},module.exports=e;