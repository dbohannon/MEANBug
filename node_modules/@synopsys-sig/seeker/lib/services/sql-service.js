"use strict";function e(){function e(e,o){let s=e[0],r;s&&("string"==typeof s||s instanceof String)?(r=s,e[0]=r):r=s&&s.text?s.text:"[unavailable]",t.debug("Intercept %s PostgreSQL query: %s",o?"native":"",r),module.exports.emit("query",{type:"pg",statement:r})}function o(e,o){const s=o[0];t.debug("Intercept MySQL query: %s",s),module.exports.emit("query",{type:"mysql",statement:s})}function s(e,t){const o=t[0];module.exports.emit("dbconnect",{type:"mysql",config:o})}function r(e,t){const o=t[t.length-1];module.exports.emit("dbconnect",{type:"mysql",config:o})}function i(){l.services.instrumentation.register({moduleId:"pg/lib/client",methodNames:"query",type:"prototype",callbacks:{__sk_doBefore:function(t,o){e(o)}}}),l.services.instrumentation.register({moduleId:"pg/lib/native/index",methodNames:"query",type:"prototype",callbacks:{__sk_doBefore:function(t,o){e(o,!0)}}}),l.services.instrumentation.register({moduleId:"pg/lib/native/client",methodNames:"query",type:"prototype",callbacks:{__sk_doBefore:function(t,o){e(o,!0)}}}),l.services.instrumentation.register({moduleId:"pg/lib/index",methodNames:"connect",callbacks:{__sk_doBefore:function(e,t){const o=t[0];("string"==typeof o||o instanceof String||"object"==typeof o)&&module.exports.emit("dbconnect",{type:"pg",config:o})}}})}function n(){l.services.instrumentation.register({moduleId:"mysql/lib/Connection",methodNames:"query",type:"prototype",callbacks:{__sk_doBefore:o}}),l.services.instrumentation.register({moduleId:"mysql/index",methodNames:"createConnection",callbacks:{__sk_doBefore:s}}),l.services.instrumentation.register({moduleId:"mysql/index",methodNames:"createPool",callbacks:{__sk_doBefore:s}}),l.services.instrumentation.register({moduleId:"mysql/lib/PoolCluster",methodNames:"add",type:"prototype",callbacks:{__sk_doBefore:r}})}function c(){l.services.instrumentation.register({moduleId:"mysql2/lib/connection",methodNames:"query",type:"prototype",callbacks:{__sk_doBefore:o}}),l.services.instrumentation.register({moduleId:"mysql2/lib/pool",methodNames:"query",type:"prototype",callbacks:{__sk_doBefore:o}}),l.services.instrumentation.register({moduleId:"mysql2/promise",wrapperName:"PromiseConnection",methodNames:"execute",type:"prototype",callbacks:{__sk_doBefore:o}}),l.services.instrumentation.register({moduleId:"mysql2/promise",wrapperName:"PromisePool",methodNames:"execute",type:"prototype",callbacks:{__sk_doBefore:o}}),l.services.instrumentation.register({moduleId:"mysql2/promise",wrapperName:"PromisePoolConnection",methodNames:"execute",type:"prototype",callbacks:{__sk_doBefore:o}}),l.services.instrumentation.register({moduleId:"mysql2/index",methodNames:"createConnection",callbacks:{__sk_doBefore:s}}),l.services.instrumentation.register({moduleId:"mysql2/index",methodNames:"createPool",callbacks:{__sk_doBefore:s}}),l.services.instrumentation.register({moduleId:"mysql2/lib/pool_cluster",methodNames:"add",type:"prototype",callbacks:{__sk_doBefore:r}})}function m(){l.services.instrumentation.register({moduleId:"sqlite3/lib/sqlite3",wrapperName:"Database",methodNames:["run","get","all","each","exec","prepare"],type:"prototype",callbacks:{__sk_doBefore:function(e,o){const s=o[0];t.debug("Intercept Sqlite3 query: %s",s),module.exports.emit("query",{type:"sqlite",statement:s})}}})}let l;this.init=function(e){l=e,i(),n(),c(),m()}}const t=require("../util/logger"),o=require("util");o.inherits(e,require("./_AbstractService")),module.exports=new e;