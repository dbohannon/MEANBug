"use strict";function e(){function e(){const e=l.config.collectorCfg.logging.loggers["com.synopsys"],s=r.getLogDir(l);l.config.collectorCfg.logging.level=e,l.config.collectorCfg.logging.dir=s,process.env.SEEKER_TRACE_INST&&n.init(s),i.info(o.format("Successfully connected to the Seeker Server:\n  - Agent version: %s\n  - Execution UUID: %s\n  - Log file: %s\n  - Project: '%s'\n  - Server: '%s' (on %s:%s)\n  - SEEKER_HOME_DIR: %s\n  - SEEKER_TEMP_DIR: %s\n  - Node version: %s",c.version,l.config.bootstrapCfg.executionUuid,i.filePath,l.config.projectCfg.key,l.config.collectorCfg.key,l.config.bootstrapCfg.collectorHost,l.config.bootstrapCfg.collectorPort,l.config.bootstrapCfg.homeDir,l.config.bootstrapCfg.tempDir,process.version));for(let e in l.services){const s=l.services[e];s.start&&s.start()}const t=require("./checkers")(l);for(let e in t){const s=t[e];l.checkers[s.id]=s,s.init()}Error.stackTraceLimit=process.env.SEEKER_STACK_TRACE_LIMIT?parseInt(process.env.SEEKER_STACK_TRACE_LIMIT):1/0}const s=r.resolveCollectorUrl(),g=t.parse(s).protocol.slice(0,-1);this.modulePath=r.normalizeToUnixPath(__dirname.substr(0,__dirname.lastIndexOf("lib"))),this.PACKAGE_NAME=c.name,this.PACKAGE_DESC=c.description,this.packageInfo=c,this.services={},this.checkers={},this.config={bootstrapCfg:{processKey:"default",projectKey:process.env.SEEKER_PROJECT_KEY||null,executionUuid:r.generateUUID(),collectorHost:t.parse(s).hostname,collectorPort:t.parse(s).port,collectorHttpProtocol:g,collectorWsProtocol:"https"===g?"wss":"ws"}},this.checkAgentLocationInLoadedModules=function(e,s){let o;o=e.includes("@synopsys-sig")?r.isWindows()?"@synopsys-sig\\seeker\\index.js":"@synopsys-sig/seeker/index.js":"agent.js";let t=[],n=!1,c=!1;if(process.mainModule&&process.mainModule.filename===s[0]){const e=s.shift();t.push(e)}return s.forEach(e=>{e.includes(o)&&(n=!0);if(e.includes("node_modules")){n||(c=!0);let s=e.indexOf("node_modules")+"node_modules".length+1,o=e.substring(s).indexOf("/"),r=e.substring(0,s+o);t.includes(r)||t.push(r)}else t.push(e)}),c?(i.error("Seeker Node Agent require statement is not located correctly: %s",t.toString().replace(/,/g,"\n")),!1):(i.trace("Loaded modules paths: %s",t.toString().replace(/,/g,"\n")),!0)},this.start=function(){let s;i.info("Starting %s v%s",this.PACKAGE_DESC,c.version);const o=require("./services");for(let e in o)s=o[e],this.services[e.substring(0,e.length-"-service".length)]=s;for(let e in o)(s=o[e]).initListeners&&s.initListeners(l);for(let e in o)(s=o[e]).init(this);this.services.collector.connect(!1)&&(e(),process.env.SK_INT_TEST||this.checkAgentLocationInLoadedModules(this.modulePath,Object.keys(require.cache)))},this.getLogger=function(){return i}}const s=require("events").EventEmitter,o=require("util"),t=require("url"),r=require("./util/misc"),i=require("./util/logger"),n=require("./util/inst-logger"),c=require("../package.json");o.inherits(e,s);const l=new e;module.exports=l,l.start();