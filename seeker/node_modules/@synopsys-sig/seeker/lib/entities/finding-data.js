"use strict";const t=require("../util/misc"),e=require("./enums/flowstate-data-type"),s=require("./enums/source-type"),i=require("./json-flow-state-data"),r=function(r,n,a){this.checkerKey=r,this.processExecUuid=n,this.requestDatas=[],this.checkerContext=null,this.vulnerableSourceName=null,this.vulnerableSourceType=null,this.tstamp=Date.now(),this.flowStates=[],this.replayData=null,this.projectVersion=a,this.identityCheckerContextKeys=[],this.isCandidate,this.origin,this.getSourceValue=function(){let t;return this.vulnerableSourceType===s.HTTP_BODY_JSON?this.flowStates.some(s=>{s instanceof i&&s.type!==e.SOURCE&&(t=s.value)}):t=this.flowStates&&this.flowStates.length>0?this.flowStates[0].value:null,t},this.getSinkValue=function(){return this.flowStates&&this.flowStates.length>0?this.flowStates[this.flowStates.length-1].value:null},this.isSharingSameVulnerability=function(t){if(this.checkerKey!==t.checkerKey)return!1;if(this.vulnerableSourceName!==t.vulnerableSourceName)return!1;if(this.vulnerableSourceType!==t.vulnerableSourceType)return!1;const e=this.extractVulnerableHttpRequestData(),s=t.extractVulnerableHttpRequestData();if(e&&e&&e.path!==s.path)return!1;const i=this.extractCodeSignature(),r=t.extractCodeSignature();if(i&&r&&i!==r)return!1;if(this.identityCheckerContextKeys&&this.checkerContext&&t.checkerContext)for(let e in this.identityCheckerContextKeys){const s=this.checkerContext[e],i=t.checkerContext[e];if(s&&i&&!s!==i)return!1}return!0},this.extractVulnerableHttpRequestData=function(){return this.requestDatas&&this.requestDatas.length>0?this.requestDatas[this.requestDatas.length-1]:void 0},this.getRequestUUID=function(){const t=this.extractVulnerableHttpRequestData();return t?t.uuid:void 0},this.extractFirstFlowState=function(){return this.flowStates&&this.flowStates.length>0?this.flowStates[this.flowStates.length-1]:null},this.extractCodeSignature=function(){const t=this.extractFirstFlowState();return t?t.codeSig:null},this.extractStackTrace=function(){const t=this.extractFirstFlowState();return t?t.stacktrace:null},this.buildVulnerabilityHash=function(){let e=t.hashCode(r);e=31*(e=31*e+t.hashCode(this.vulnerableSourceName))+t.hashCode(this.vulnerableSourceType);const s=this.extractVulnerableHttpRequestData();s&&null!==s.path&&(e=31*e+t.hashCode(s.path));const i=this.extractCodeSignature();if(e=31*e+t.hashCode(i),this.identityCheckerContextKeys&&this.checkerContext)for(let s in this.identityCheckerContextKeys){const i=this.checkerContext[s];e=31*e+t.hashCode(i)}return e}};module.exports=r;