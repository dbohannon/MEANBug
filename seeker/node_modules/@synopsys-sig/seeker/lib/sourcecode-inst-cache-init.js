"use strict";function e(){const e=new Date;console.log("***** Instrumenting source-code");const c=n(),t=o();if(t){r(s(t),c);const n=(new Date-e)/1e3;console.log("***** "+a+" files were instrumented and saved to "+c+" in "+n+" s")}else console.log("***** No prefix argument in npm install command, skipping source-code instrumentation")}function n(){const e=l.getInstDir();if(c.existsSync(e))try{const n=c.readdirSync(e);n.forEach(n=>{c.unlinkSync(t.resolve(e,n))})}catch(e){console.error(e)}else l.mkDirsSync(e);console.log("instDir: "+e);const n=t.resolve(e,"../");return c.chmodSync(e,511),c.chmodSync(n,511),e}function o(){try{const e=JSON.parse(process.env.npm_config_argv).cooked,n=e.indexOf("--prefix");if(-1===n)return;const o=e[n+1];return console.log("prefix: "+o),o}catch(e){console.warn(e)}}function s(e){const n=process.cwd().replace(/\\/g,"/");let o=n.slice(0,n.length-"node_modules/@synopsys-sig/seeker".length);return o=o.slice(0,o.lastIndexOf(e)),console.log("appDir: "+o),o}function r(e,n){const o=c.readdirSync(e);for(let s=0;s<o.length;++s){const l=o[s],d=t.resolve(e,l);try{if(c.lstatSync(d).isDirectory())r(d,n);else if(d.endsWith(".js")){const e=c.readFileSync(d).toString(),o=u._instrumentSourceCode(d,e),s=i.createHash("sha256").update(e).digest("hex"),r=t.resolve(n,s);c.writeFileSync(r,o),++a}}catch(e){console.error(e)}}}const c=require("fs"),t=require("path"),i=require("crypto"),l=require("./util/misc"),u=require("./services/sourcecode-instrumentation-service");let a=0;e();