"use strict";function e(t,i){e.super_.apply(this,arguments);const o="replayResponseBody",u=new Map,c=new Map;this.start=function e(){t.services.http.on(i,"requestEnded",function(e){if(t.services.replay.isActive()&&!u.has(e.requestData.contextPath)&&!c.has(e.requestData.path)){const t=r(i).withDefaults().withCandidate(),n=e.requestData.getFirstHeader(s.REPLAY_ACTIVE_HEADER),a=e.requestData.getFirstHeader(s.REPLAY_FOR_CHECKER);if(n&&a&&a.toLowerCase()===i.toLowerCase()){const n={};n.replayResponseBody=e.responseData.statusCode,t.withContext(n)}t.submit()}})},this.isReplayable=function e(){return!0},this.getVerificationValue=function e(){return""},this.getVerificationMethod=function e(){return this.httpMethod},this.getTamperedBody=function e(){},this.getStatusForReplay=function e(t){const i=t.newFinding.extractVulnerableHttpRequestData();if(c.set(i.path,!0),!t.newFinding.checkerContext||!t.newFinding.checkerContext.replayResponseBody)return a.DELETED;const r=t.newFinding.checkerContext.replayResponseBody;return 403!==r&&404!==r&&405!==r?(i?u.set(i.contextPath):n.warn("request data is null, contextPath will not be added to the checker cache"),a.VERIFIED):a.DELETED},this._reset=function e(){u.clear(),c.clear()}}const t=require("util"),n=require("../util/logger"),i=require("./_AbstractChecker"),r=require("../services/finding-service").FindingBuilder,s=require("../entities/enums/replay-header"),a=require("../entities/enums/replay-status");t.inherits(e,i),module.exports=e;