"use strict";function t(e,r){t.super_.apply(this,arguments),this.start=function t(){e.services.crypto.on(r,"update",function(t){const a=t.input,c=t.algorithm,u=e.config.processCfg.projectEnvCfg.sensitiveParameterMatchers;if(e.services.datatainting.isTainted(a)&&c&&i.isAlgorithmVulnerable(c)&&u){const t=e.services.http.getCurrentRequestData(),i=e.services.datatainting.getTaintInfo(a);for(let e=0;e<u.length;++e){const o=u[e];o.type!==i.sourceType&&"ALL"!==o.type||s.checkMatchers(t.path,o,t.params,(t,e)=>{new n(r).withTaintedDefaults(a).withContext({name:o.name,algorithm:c,data:e}).withIdentityContextKey("algorithm").submit()})}}})}}const e=require("util"),i=require("../util/crypto-utils"),r=require("./_AbstractChecker"),n=require("../services/finding-service").FindingBuilder,s=require("../util/sensitive-matcher");e.inherits(t,r),module.exports=function(e,i){return new t(e,i)};